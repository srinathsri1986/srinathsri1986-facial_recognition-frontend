{"ast":null,"code":"var _jsxFileName = \"/var/www/html/facial_recognition/frontend/src/components/HRUploadVideo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"http://141.148.219.190:8000\";\nconst OCI_PAR_URL = \"https://objectstorage.ap-mumbai-1.oraclecloud.com/p/nOwS_-FJUZTtO__6PjAi7T7FyD6MNvkmUIs55IGsYbaSH6wTjIj6Y7UoZM6iKOgp/n/bm5jx0spql58/b/facerec-uploads/o/video/\";\nconst HRUploadVideo = ({\n  candidateId,\n  onClose\n}) => {\n  _s();\n  const [videoFile, setVideoFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // ✅ Handle File Selection\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    // ✅ Validate File Type\n    const allowedTypes = [\"video/mp4\", \"video/avi\", \"video/mkv\", \"video/mov\", \"video/webm\"];\n    if (!allowedTypes.includes(file.type)) {\n      setError(\"Invalid file format. Please upload a video file (MP4, AVI, MKV, MOV, WebM).\");\n      return;\n    }\n\n    // ✅ Validate File Size (Max 100MB)\n    if (file.size > 100 * 1024 * 1024) {\n      setError(\"File size exceeds 100MB limit.\");\n      return;\n    }\n    setVideoFile(file);\n    setError(null);\n  };\n\n  // ✅ Handle File Upload to OCI Object Storage\n  const handleUpload = async () => {\n    if (!videoFile) {\n      setError(\"Please select a video file to upload.\");\n      return;\n    }\n    setUploading(true);\n    setError(null);\n    try {\n      const videoFilename = `candidate_${candidateId}.mp4`; // ✅ Unique name per candidate\n      const uploadUrl = `${OCI_PAR_URL}${videoFilename}`;\n\n      // ✅ Uploading to OCI Object Storage\n      const response = await fetch(uploadUrl, {\n        method: \"PUT\",\n        body: videoFile,\n        headers: {\n          \"Content-Type\": \"application/octet-stream\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n      console.log(\"✅ Video uploaded successfully:\", uploadUrl);\n\n      // ✅ Trigger Face Recognition\n      await triggerFaceRecognition(videoFilename);\n      alert(\"Video uploaded and verification started!\");\n      onClose(); // ✅ Close modal after upload\n    } catch (err) {\n      console.error(\"❌ Upload error:\", err);\n      setError(\"Failed to upload video. Please try again.\");\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  // ✅ Trigger Facial Recognition via API\n  const triggerFaceRecognition = async videoFilename => {\n    try {\n      const recognitionResponse = await fetch(`${API_BASE_URL}/api/verification/face-recognition`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          candidate_id: candidateId,\n          video_filename: videoFilename\n        })\n      });\n      if (!recognitionResponse.ok) {\n        throw new Error(\"Facial recognition failed.\");\n      }\n      console.log(\"✅ Facial recognition triggered successfully!\");\n    } catch (err) {\n      console.error(\"❌ Facial recognition error:\", err);\n      setError(\"Facial recognition process failed.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-lg w-3/4 max-w-lg relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        className: \"absolute top-4 right-4 text-gray-600 hover:text-red-600 text-lg font-bold\",\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-center text-gray-800 mb-4\",\n        children: \"Upload Candidate Verification Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600 text-center\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/*\",\n        onChange: handleFileChange,\n        className: \"border p-2 w-full rounded mt-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        disabled: uploading,\n        className: \"mt-4 bg-blue-500 text-white w-full py-2 rounded font-semibold hover:bg-blue-600 transition-all\",\n        children: uploading ? \"Uploading...\" : \"Upload Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(HRUploadVideo, \"R/QfruxfOfphADb1D5fXG0p+6cM=\");\n_c = HRUploadVideo;\nexport default HRUploadVideo;\nvar _c;\n$RefreshReg$(_c, \"HRUploadVideo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","API_BASE_URL","OCI_PAR_URL","HRUploadVideo","candidateId","onClose","_s","videoFile","setVideoFile","uploading","setUploading","error","setError","handleFileChange","event","file","target","files","allowedTypes","includes","type","size","handleUpload","videoFilename","uploadUrl","response","fetch","method","body","headers","ok","Error","statusText","console","log","triggerFaceRecognition","alert","err","recognitionResponse","JSON","stringify","candidate_id","video_filename","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","disabled","_c","$RefreshReg$"],"sources":["/var/www/html/facial_recognition/frontend/src/components/HRUploadVideo.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst API_BASE_URL = \"http://141.148.219.190:8000\";\nconst OCI_PAR_URL =\n  \"https://objectstorage.ap-mumbai-1.oraclecloud.com/p/nOwS_-FJUZTtO__6PjAi7T7FyD6MNvkmUIs55IGsYbaSH6wTjIj6Y7UoZM6iKOgp/n/bm5jx0spql58/b/facerec-uploads/o/video/\";\n\nconst HRUploadVideo = ({ candidateId, onClose }) => {\n  const [videoFile, setVideoFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // ✅ Handle File Selection\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n\n    if (!file) return;\n\n    // ✅ Validate File Type\n    const allowedTypes = [\"video/mp4\", \"video/avi\", \"video/mkv\", \"video/mov\", \"video/webm\"];\n    if (!allowedTypes.includes(file.type)) {\n      setError(\"Invalid file format. Please upload a video file (MP4, AVI, MKV, MOV, WebM).\");\n      return;\n    }\n\n    // ✅ Validate File Size (Max 100MB)\n    if (file.size > 100 * 1024 * 1024) {\n      setError(\"File size exceeds 100MB limit.\");\n      return;\n    }\n\n    setVideoFile(file);\n    setError(null);\n  };\n\n  // ✅ Handle File Upload to OCI Object Storage\n  const handleUpload = async () => {\n    if (!videoFile) {\n      setError(\"Please select a video file to upload.\");\n      return;\n    }\n\n    setUploading(true);\n    setError(null);\n\n    try {\n      const videoFilename = `candidate_${candidateId}.mp4`; // ✅ Unique name per candidate\n      const uploadUrl = `${OCI_PAR_URL}${videoFilename}`;\n\n      // ✅ Uploading to OCI Object Storage\n      const response = await fetch(uploadUrl, {\n        method: \"PUT\",\n        body: videoFile,\n        headers: { \"Content-Type\": \"application/octet-stream\" },\n      });\n\n      if (!response.ok) {\n        throw new Error(`Upload failed: ${response.statusText}`);\n      }\n\n      console.log(\"✅ Video uploaded successfully:\", uploadUrl);\n\n      // ✅ Trigger Face Recognition\n      await triggerFaceRecognition(videoFilename);\n\n      alert(\"Video uploaded and verification started!\");\n      onClose(); // ✅ Close modal after upload\n    } catch (err) {\n      console.error(\"❌ Upload error:\", err);\n      setError(\"Failed to upload video. Please try again.\");\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  // ✅ Trigger Facial Recognition via API\n  const triggerFaceRecognition = async (videoFilename) => {\n    try {\n      const recognitionResponse = await fetch(`${API_BASE_URL}/api/verification/face-recognition`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ candidate_id: candidateId, video_filename: videoFilename }),\n      });\n\n      if (!recognitionResponse.ok) {\n        throw new Error(\"Facial recognition failed.\");\n      }\n\n      console.log(\"✅ Facial recognition triggered successfully!\");\n    } catch (err) {\n      console.error(\"❌ Facial recognition error:\", err);\n      setError(\"Facial recognition process failed.\");\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\n      <div className=\"bg-white p-6 rounded-lg shadow-lg w-3/4 max-w-lg relative\">\n        {/* ✅ Close Button */}\n        <button\n          onClick={onClose}\n          className=\"absolute top-4 right-4 text-gray-600 hover:text-red-600 text-lg font-bold\"\n        >\n          ✕\n        </button>\n\n        <h2 className=\"text-2xl font-bold text-center text-gray-800 mb-4\">\n          Upload Candidate Verification Video\n        </h2>\n\n        {error && <p className=\"text-red-600 text-center\">{error}</p>}\n\n        <input type=\"file\" accept=\"video/*\" onChange={handleFileChange} className=\"border p-2 w-full rounded mt-2\" />\n\n        <button\n          onClick={handleUpload}\n          disabled={uploading}\n          className=\"mt-4 bg-blue-500 text-white w-full py-2 rounded font-semibold hover:bg-blue-600 transition-all\"\n        >\n          {uploading ? \"Uploading...\" : \"Upload Video\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default HRUploadVideo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}