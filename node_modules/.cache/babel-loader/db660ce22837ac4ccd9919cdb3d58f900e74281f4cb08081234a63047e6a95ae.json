{"ast":null,"code":"var _jsxFileName = \"/var/www/html/facial_recognition/frontend/src/components/HRUploadVideo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./HRUploadVideo.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HRUploadVideo = () => {\n  _s();\n  const {\n    candidateId\n  } = useParams();\n  const [video, setVideo] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const handleUpload = async () => {\n    if (!video) {\n      setMessage(\"Please select a video.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"candidate_id\", candidateId);\n    formData.append(\"video\", video);\n    try {\n      const response = await fetch(\"http://141.148.219.190:8000/api/hr/upload-video\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      setMessage(data.success ? \"Video uploaded successfully!\" : \"Failed to upload video.\");\n    } catch (error) {\n      setMessage(\"Error uploading video.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"video/*\",\n      onChange: e => setVideo(e.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(HRUploadVideo, \"gHbWHm06D7KlNXp01cb2jpPgmkU=\", false, function () {\n  return [useParams];\n});\n_c = HRUploadVideo;\nexport default HRUploadVideo;\nvar _c;\n$RefreshReg$(_c, \"HRUploadVideo\");","map":{"version":3,"names":["React","useState","useParams","jsxDEV","_jsxDEV","HRUploadVideo","_s","candidateId","video","setVideo","message","setMessage","handleUpload","formData","FormData","append","response","fetch","method","body","data","json","success","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","target","files","onClick","_c","$RefreshReg$"],"sources":["/var/www/html/facial_recognition/frontend/src/components/HRUploadVideo.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./HRUploadVideo.css\";\n\nconst HRUploadVideo = () => {\n  const { candidateId } = useParams();\n  const [video, setVideo] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  const handleUpload = async () => {\n    if (!video) {\n      setMessage(\"Please select a video.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"candidate_id\", candidateId);\n    formData.append(\"video\", video);\n\n    try {\n      const response = await fetch(\"http://141.148.219.190:8000/api/hr/upload-video\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      const data = await response.json();\n      setMessage(data.success ? \"Video uploaded successfully!\" : \"Failed to upload video.\");\n    } catch (error) {\n      setMessage(\"Error uploading video.\");\n    }\n  };\n\n  return (\n    <div className=\"upload-container\">\n      <h2>Upload Video</h2>\n      <input type=\"file\" accept=\"video/*\" onChange={(e) => setVideo(e.target.files[0])} />\n      <button onClick={handleUpload}>Upload</button>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default HRUploadVideo;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAY,CAAC,GAAGL,SAAS,CAAC,CAAC;EACnC,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACJ,KAAK,EAAE;MACVG,UAAU,CAAC,wBAAwB,CAAC;MACpC;IACF;IAEA,MAAME,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAER,WAAW,CAAC;IAC5CM,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,KAAK,CAAC;IAE/B,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,iDAAiD,EAAE;QAC9EC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN;MACR,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCV,UAAU,CAACS,IAAI,CAACE,OAAO,GAAG,8BAA8B,GAAG,yBAAyB,CAAC;IACvF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,UAAU,CAAC,wBAAwB,CAAC;IACtC;EACF,CAAC;EAED,oBACEP,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BrB,OAAA;MAAAqB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAGC,CAAC,IAAKxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpFzB,OAAA;MAAQgC,OAAO,EAAExB,YAAa;MAAAa,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7CnB,OAAO,iBAAIN,OAAA;MAAAqB,QAAA,EAAIf;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACvB,EAAA,CApCID,aAAa;EAAA,QACOH,SAAS;AAAA;AAAAmC,EAAA,GAD7BhC,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}