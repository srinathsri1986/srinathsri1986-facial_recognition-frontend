{"ast":null,"code":"var _jsxFileName = \"/var/www/html/facial_recognition/frontend/src/components/VideoCapture.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCapture = () => {\n  _s();\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [recording, setRecording] = useState(false);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const [email, setEmail] = useState(\"\");\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoRef.current.srcObject = stream;\n      const mediaRecorder = new MediaRecorder(stream);\n      const chunks = [];\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          chunks.push(event.data);\n        }\n      };\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(chunks, {\n          type: \"video/mp4\"\n        });\n        setVideoBlob(blob);\n      };\n      mediaRecorderRef.current = mediaRecorder;\n      mediaRecorder.start();\n      setRecording(true);\n    } catch (error) {\n      console.error(\"Error accessing webcam:\", error);\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n      videoRef.current.srcObject.getTracks().forEach(track => track.stop());\n    }\n  };\n  const uploadVideo = async () => {\n    if (!videoBlob || !email) {\n      alert(\"Please enter your email and record a video.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", videoBlob, \"recorded-video.mp4\");\n    formData.append(\"email\", email);\n    try {\n      const response = await axios.post(\"http://141.148.219.190:8000/verify-video/\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(response.data.verified ? \"✅ Verification Successful\" : \"❌ Verification Failed\");\n    } catch (error) {\n      console.error(\"Error uploading video:\", error);\n      alert(\"Upload failed. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"Candidate Video Capture\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter your email\",\n      className: \"p-2 border rounded mb-4\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      className: \"mb-4 border rounded\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4\",\n      children: !recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green-500 text-white px-4 py-2 rounded\",\n        onClick: startRecording,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-red-500 text-white px-4 py-2 rounded\",\n        onClick: stopRecording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), videoBlob && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"bg-blue-500 text-white px-4 py-2 rounded\",\n      onClick: uploadVideo,\n      children: \"Upload Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCapture, \"Ts+qjes95cxBDnKsUj+S/mMA+Bw=\");\n_c = VideoCapture;\nexport default VideoCapture;\nvar _c;\n$RefreshReg$(_c, \"VideoCapture\");","map":{"version":3,"names":["React","useRef","useState","axios","jsxDEV","_jsxDEV","VideoCapture","_s","videoRef","mediaRecorderRef","recording","setRecording","videoBlob","setVideoBlob","email","setEmail","startRecording","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","mediaRecorder","MediaRecorder","chunks","ondataavailable","event","data","size","push","onstop","blob","Blob","type","start","error","console","stopRecording","stop","getTracks","forEach","track","uploadVideo","alert","formData","FormData","append","response","post","headers","verified","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","ref","autoPlay","onClick","_c","$RefreshReg$"],"sources":["/var/www/html/facial_recognition/frontend/src/components/VideoCapture.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport axios from \"axios\";\n\nconst VideoCapture = () => {\n  const videoRef = useRef(null);\n  const mediaRecorderRef = useRef(null);\n  const [recording, setRecording] = useState(false);\n  const [videoBlob, setVideoBlob] = useState(null);\n  const [email, setEmail] = useState(\"\");\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      videoRef.current.srcObject = stream;\n      const mediaRecorder = new MediaRecorder(stream);\n      const chunks = [];\n\n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          chunks.push(event.data);\n        }\n      };\n\n      mediaRecorder.onstop = () => {\n        const blob = new Blob(chunks, { type: \"video/mp4\" });\n        setVideoBlob(blob);\n      };\n\n      mediaRecorderRef.current = mediaRecorder;\n      mediaRecorder.start();\n      setRecording(true);\n    } catch (error) {\n      console.error(\"Error accessing webcam:\", error);\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current) {\n      mediaRecorderRef.current.stop();\n      setRecording(false);\n      videoRef.current.srcObject.getTracks().forEach((track) => track.stop());\n    }\n  };\n\n  const uploadVideo = async () => {\n    if (!videoBlob || !email) {\n      alert(\"Please enter your email and record a video.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", videoBlob, \"recorded-video.mp4\");\n    formData.append(\"email\", email);\n\n    try {\n      const response = await axios.post(\n        \"http://141.148.219.190:8000/verify-video/\",\n        formData,\n        { headers: { \"Content-Type\": \"multipart/form-data\" } }\n      );\n      alert(response.data.verified ? \"✅ Verification Successful\" : \"❌ Verification Failed\");\n    } catch (error) {\n      console.error(\"Error uploading video:\", error);\n      alert(\"Upload failed. Please try again.\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-100 p-6\">\n      <h1 className=\"text-2xl font-bold mb-4\">Candidate Video Capture</h1>\n      <input\n        type=\"email\"\n        placeholder=\"Enter your email\"\n        className=\"p-2 border rounded mb-4\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <video ref={videoRef} autoPlay className=\"mb-4 border rounded\" />\n      <div className=\"mb-4\">\n        {!recording ? (\n          <button className=\"bg-green-500 text-white px-4 py-2 rounded\" onClick={startRecording}>\n            Start Recording\n          </button>\n        ) : (\n          <button className=\"bg-red-500 text-white px-4 py-2 rounded\" onClick={stopRecording}>\n            Stop Recording\n          </button>\n        )}\n      </div>\n      {videoBlob && (\n        <button className=\"bg-blue-500 text-white px-4 py-2 rounded\" onClick={uploadVideo}>\n          Upload Video\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default VideoCapture;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}